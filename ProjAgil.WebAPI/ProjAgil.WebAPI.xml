<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ProjAgil.WebAPI</name>
    </assembly>
    <members>
        <member name="T:ProjAgil.WebAPI.Controllers.EventoController">
            <summary>
            Controller de Eventos
            [ApiController] é do decorador da classe, isso faz é a nova forma de fazer as
            validações como o FromBody e o ModelState.IsValid.
            Já faz a validação dos data anotation
            </summary>
        </member>
        <member name="M:ProjAgil.WebAPI.Controllers.EventoController.#ctor(ProjAgil.Dominio.Interfaces.Aplicacao.IEventoAppService)">
            <summary>
            Contrutor Evento
            </summary>
            <param name="eventoAppService"></param>
        </member>
        <member name="M:ProjAgil.WebAPI.Controllers.EventoController.Get">
            <summary>
            Retorna todos os eventos
            </summary>
            <returns></returns>
        </member>
        <member name="M:ProjAgil.WebAPI.Controllers.EventoController.Upload">
            <summary>
            Post de imagens
            </summary>
            <returns></returns>
        </member>
        <member name="M:ProjAgil.WebAPI.Controllers.EventoController.Get(System.Int32)">
            <summary>
            Retorna o evento pelo id do evento
            </summary>
            <param name="eventoId"></param>
            <returns></returns>
        </member>
        <member name="M:ProjAgil.WebAPI.Controllers.EventoController.Get(System.String)">
            <summary>
            Retorna o evento pelo nome do tema
            </summary>
            <param name="tema"></param>
            <returns></returns>
        </member>
        <member name="M:ProjAgil.WebAPI.Controllers.EventoController.Post(ProjAgil.Dominio.ViewModels.EventoViewModel)">
            <summary>
            Adicionar um evento
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:ProjAgil.WebAPI.Controllers.EventoController.Put(System.Int32,ProjAgil.Dominio.ViewModels.EventoViewModel)">
            <summary>
            Faz a atualização do evento
            </summary>
            <param name="eventoId"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:ProjAgil.WebAPI.Controllers.EventoController.Delete(System.Int32)">
            <summary>
            Delete um evento
            </summary>
            <param name="eventoId"></param>
            <returns></returns>
        </member>
        <member name="T:ProjAgil.WebAPI.Controllers.PalestranteController">
            <summary>
            Controller de palestrantes
            </summary>
        </member>
        <member name="M:ProjAgil.WebAPI.Controllers.PalestranteController.#ctor(ProjAgil.Dominio.Interfaces.Aplicacao.IPalestranteAppServece)">
            <summary>
            Contrutor de palestrantes
            </summary>
            <param name="palestranteAppServece"></param>
        </member>
        <member name="M:ProjAgil.WebAPI.Controllers.PalestranteController.Get(System.Int32)">
            <summary>
             GET: api/Palestrante
            </summary>
            <param name="palestranteId"></param>
            <returns></returns>
        </member>
        <member name="M:ProjAgil.WebAPI.Controllers.PalestranteController.Get(System.String)">
            <summary>
            GET: api/Palestrante/nome
            </summary>
            <param name="nome"></param>
            <returns></returns>
        </member>
        <member name="M:ProjAgil.WebAPI.Controllers.PalestranteController.Post(ProjAgil.Dominio.ViewModels.PalestranteViewModel)">
            <summary>
            POST: api/Palestrante
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:ProjAgil.WebAPI.Controllers.PalestranteController.Put(System.Int32,ProjAgil.Dominio.ViewModels.PalestranteViewModel)">
            <summary>
            PUT: api/Palestrante/5
            </summary>
            <param name="palestranteId"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:ProjAgil.WebAPI.Controllers.PalestranteController.Delete(System.Int32)">
            <summary>
            DELETE: api/ApiWithActions/5
            </summary>
            <param name="palestranteId"></param>
            <returns></returns>
        </member>
        <member name="T:ProjAgil.WebAPI.Controllers.UserController">
            <summary>
            Controller de autenticação de usuário
            </summary>
        </member>
        <member name="M:ProjAgil.WebAPI.Controllers.UserController.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Identity.UserManager{ProjAgil.Dominio.Identity.User},Microsoft.AspNetCore.Identity.SignInManager{ProjAgil.Dominio.Identity.User},AutoMapper.IMapper)">
            <summary>
            Construtor
            </summary>
        </member>
        <member name="M:ProjAgil.WebAPI.Controllers.UserController.Get">
            <summary>
            Retorna os usuarios
            </summary>
            <returns></returns>
        </member>
        <member name="M:ProjAgil.WebAPI.Controllers.UserController.Register(ProjAgil.Dominio.ViewModels.UserViewModel)">
            <summary>
            Registra o usuário informado
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:ProjAgil.WebAPI.Controllers.UserController.Login(ProjAgil.Dominio.ViewModels.UserLoginViewMode)">
            <summary>
            Realizar o login do usuario
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:ProjAgil.WebAPI.Startup">
            <summary>
            Startup do projeto
            </summary>
        </member>
        <member name="M:ProjAgil.WebAPI.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Construtor
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:ProjAgil.WebAPI.Startup.Configuration">
            <summary>
            IConfiguration
            </summary>
        </member>
        <member name="M:ProjAgil.WebAPI.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:ProjAgil.WebAPI.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
    </members>
</doc>
